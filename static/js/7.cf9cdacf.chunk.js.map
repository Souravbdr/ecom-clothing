{"version":3,"sources":["components/checkout-item/checkout-item.styles.jsx","components/checkout-item/checkout-item.component.jsx","components/stripe-button/stripe-button.component.jsx","pages/checkout/checkout.styles.jsx","pages/checkout/checkout.component.jsx"],"names":["CheckoutItemContainer","styled","div","ImageContainer","TextContainer","span","QuantityContainer","RemoveButtonContainer","connect","dispatch","clearItem","item","clearItemFromCart","addItem","removeItem","cartItem","name","imageUrl","price","quantity","src","alt","onClick","StripeCheckoutButton","priceForStripe","label","billingAddress","shippingAddress","image","description","amount","panelLabel","token","axios","url","method","data","then","response","alert","catch","error","console","log","stripeKey","CheckoutPageContainer","CheckoutHeaderContainer","HeaderBlockContainer","TotalContainer","WarningContainer","mapStateToProps","createStructuredSelector","cartItems","selectCartItems","total","selectCartTotal","map","id"],"mappings":"kMAEaA,EAAwBC,IAAOC,IAAV,+PAarBC,EAAiBF,IAAOC,IAAV,sHASdE,EAAgBH,IAAOI,KAAV,2GAObC,EAAoBL,YAAOG,EAAPH,CAAH,sHAUjBM,EAAwBN,IAAOC,IAAV,uE,QCHnBM,cAAQ,MANI,SAAAC,GAAQ,MAAK,CACpCC,UAAW,SAAAC,GAAI,OAAIF,EAASG,YAAkBD,KAC9CE,QAAS,SAAAF,GAAI,OAAIF,EAASI,YAAQF,KAClCG,WAAY,SAAAH,GAAI,OAAIF,EAASK,YAAWH,QAG7BH,EA3BM,SAAC,GAAkD,IAAhDO,EAA+C,EAA/CA,SAAUL,EAAqC,EAArCA,UAAWI,EAA0B,EAA1BA,WAAYD,EAAc,EAAdA,QAC7CG,EAAoCD,EAApCC,KAAMC,EAA8BF,EAA9BE,SAAUC,EAAoBH,EAApBG,MAAOC,EAAaJ,EAAbI,SAC/B,OACI,eAACnB,EAAD,WACI,cAACG,EAAD,UACI,qBAAKiB,IAAKH,EAAUI,IAAI,WAE5B,cAACjB,EAAD,UAAgBY,IAChB,eAACV,EAAD,WACI,qBAAKgB,QAAS,kBAAMR,EAAWC,IAA/B,oBACA,+BAAOI,IACP,qBAAKG,QAAS,kBAAMT,EAAQE,IAA5B,uBAEJ,cAACX,EAAD,UAAgBc,IAChB,cAACX,EAAD,CAAuBe,QAAS,kBAAMZ,EAAUK,IAAhD,0B,oCCiBGQ,EAtCc,SAAC,GAAe,IAAbL,EAAY,EAAZA,MACtBM,EAAyB,IAARN,EAqBvB,OACI,cAAC,IAAD,CACIO,MAAM,UACNT,KAAK,qBACLU,gBAAc,EACdC,iBAAe,EACfC,MAAM,iCACNC,YAAW,yBAAoBX,GAC/BY,OAAQN,EACRO,WAAW,UACXC,MA5BQ,SAAAA,GACZC,IAAM,CACFC,IAAK,UACLC,OAAQ,OACRC,KAAM,CACFN,OAAQN,EACRQ,WAELK,MAAK,SAAAC,GACJC,MAAM,yBACPC,OAAM,SAAAC,GACLC,QAAQC,IAAI,kBAAkBF,GAC9BF,MACI,wFAgBJK,UA/Be,iH,QCJdC,EAAwB5C,IAAOC,IAAV,6RAgBrB4C,EAA0B7C,IAAOC,IAAV,wJAQvB6C,EAAuB9C,IAAOC,IAAV,+NAcpB8C,EAAiB/C,IAAOC,IAAV,2FAMd+C,EAAmBhD,IAAOC,IAAV,2GCAvBgD,EAAkBC,YAAyB,CAC7CC,UAAWC,IACXC,MAAOC,MAGI/C,sBAAQ0C,EAAR1C,EArCE,SAAC,GAAD,IAAG4C,EAAH,EAAGA,UAAWE,EAAd,EAAcA,MAAd,OACb,eAACT,EAAD,WACI,eAACC,EAAD,WACI,cAACC,EAAD,UACI,6CAEJ,cAACA,EAAD,UACI,iDAEJ,cAACA,EAAD,UACI,8CAEJ,cAACA,EAAD,UACI,2CAEJ,cAACA,EAAD,UACI,+CAGPK,EAAUI,KAAI,SAAAzC,GAAQ,OACnB,cAAC,EAAD,CAAgCA,SAAUA,GAAvBA,EAAS0C,OAEhC,eAACT,EAAD,sBAAyBM,KACzB,eAACL,EAAD,sEAEI,uBAFJ,iDAKA,cAAC,EAAD,CAAsB/B,MAAOoC","file":"static/js/7.cf9cdacf.chunk.js","sourcesContent":["import styled from 'styled-components';\r\n\r\nexport const CheckoutItemContainer = styled.div`\r\n  width: 100%;\r\n  display: flex;\r\n  min-height: 100px;\r\n  border-bottom: 1px solid darkgrey;\r\n  padding: 15px 0;\r\n  font-size: 20px;\r\n  align-items: center;\r\n  @media screen and (max-width: 800px) {\r\n    font-size: 18px;\r\n  }\r\n`;\r\n\r\nexport const ImageContainer = styled.div`\r\n  width: 23%;\r\n  padding-right: 15px;\r\n  img {\r\n    width: 100%;\r\n    height: 100%;\r\n  }\r\n`;\r\n\r\nexport const TextContainer = styled.span`\r\n  width: 23%;\r\n  @media screen and (max-width: 800px) {\r\n    width: 22%;\r\n  }\r\n`;\r\n\r\nexport const QuantityContainer = styled(TextContainer)`\r\n  display: flex;\r\n  span {\r\n    margin: 0 10px;\r\n  }\r\n  div {\r\n    cursor: pointer;\r\n  }\r\n`;\r\n\r\nexport const RemoveButtonContainer = styled.div`\r\n  padding-left: 12px;\r\n  cursor: pointer;\r\n`;","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { addItem, clearItemFromCart, removeItem } from \"../../redux/cart/cart.action\";\r\nimport {\r\n    CheckoutItemContainer,\r\n    ImageContainer,\r\n    TextContainer,\r\n    QuantityContainer,\r\n    RemoveButtonContainer\r\n} from './checkout-item.styles';\r\n\r\nconst CheckoutItem = ({ cartItem, clearItem, removeItem, addItem }) => {\r\n    const { name, imageUrl, price, quantity } = cartItem;\r\n    return (\r\n        <CheckoutItemContainer>\r\n            <ImageContainer>\r\n                <img src={imageUrl} alt='item' />\r\n            </ImageContainer>\r\n            <TextContainer>{name}</TextContainer>\r\n            <QuantityContainer>\r\n                <div onClick={() => removeItem(cartItem)}>&#10094;</div>\r\n                <span>{quantity}</span>\r\n                <div onClick={() => addItem(cartItem)}>&#10095;</div>\r\n            </QuantityContainer>\r\n            <TextContainer>{price}</TextContainer>\r\n            <RemoveButtonContainer onClick={() => clearItem(cartItem)}>\r\n                &#10005;\r\n            </RemoveButtonContainer>\r\n        </CheckoutItemContainer>\r\n    );\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    clearItem: item => dispatch(clearItemFromCart(item)),\r\n    addItem: item => dispatch(addItem(item)),\r\n    removeItem: item => dispatch(removeItem(item))\r\n})\r\n\r\nexport default connect(null, mapDispatchToProps)(CheckoutItem);\r\n","import React from 'react';\r\nimport StripeCheckout from 'react-stripe-checkout';\r\nimport axios from 'axios';\r\n\r\nconst StripeCheckoutButton = ({ price }) => {\r\n    const priceForStripe = price * 100;\r\n    const publishableKey = 'pk_test_51JnlQYSHsOQ6B0NGpaPRisl4CabbJueIaT74AxRzESjwyQjN6tOtRl6bl2WajBFZACycFrN2oDwb0qZMqBthzq3n009kkgGgU8';\r\n\r\n    const onToken = token => {\r\n        axios({\r\n            url: 'payment',\r\n            method: 'post',\r\n            data: {\r\n                amount: priceForStripe,\r\n                token\r\n            }\r\n        }).then(response => {\r\n            alert('Payment Succesfull');\r\n        }).catch(error => {\r\n            console.log('Payment error: ',error);\r\n            alert(\r\n                'There was issue with your payment. Please sure you use the porvided credit card.'\r\n            );\r\n        });\r\n    }\r\n\r\n    return (\r\n        <StripeCheckout\r\n            label='Pay Now'\r\n            name='ECOM Clothing Ltd.'\r\n            billingAddress\r\n            shippingAddress\r\n            image='https://svgshare.com/i/CUz.svg'\r\n            description={`Your total is $${price}`}\r\n            amount={priceForStripe}\r\n            panelLabel='Pay Now'\r\n            token={onToken}\r\n            stripeKey={publishableKey}\r\n        />\r\n    );\r\n}\r\n\r\nexport default StripeCheckoutButton;\r\n","import styled from 'styled-components';\r\n\r\nexport const CheckoutPageContainer = styled.div`\r\n  width: 55%;\r\n  min-height: 90vh;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  margin: 50px auto 0;\r\n  button {\r\n    margin-left: auto;\r\n    margin-top: 50px;\r\n  }\r\n  @media screen and (max-width: 800px) {\r\n    width: 90%;\r\n  }\r\n`;\r\n\r\nexport const CheckoutHeaderContainer = styled.div`\r\n  width: 100%;\r\n  height: 40px;\r\n  display: flex;\r\n  justify-content: space-between;\r\n  border-bottom: 1px solid darkgrey;\r\n`;\r\n\r\nexport const HeaderBlockContainer = styled.div`\r\n  text-transform: capitalize;\r\n  width: 23%;\r\n  &:last-child {\r\n    width: 8%;\r\n  }\r\n  @media screen and (max-width: 800px) {\r\n    width: 22%;\r\n    &:last-child {\r\n      width: 12%;\r\n    }\r\n  }\r\n`;\r\n\r\nexport const TotalContainer = styled.div`\r\n  margin-top: 30px;\r\n  margin-left: auto;\r\n  font-size: 36px;\r\n`;\r\n\r\nexport const WarningContainer = styled.div`\r\n  text-align: center;\r\n  margin-top: 40px;\r\n  font-size: 24px;\r\n  color: red;\r\n`;","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { createStructuredSelector } from \"reselect\";\r\nimport CheckoutItem from \"../../components/checkout-item/checkout-item.component\";\r\nimport StripeCheckoutButton from \"../../components/stripe-button/stripe-button.component\";\r\nimport { selectCartItems, selectCartTotal } from \"../../redux/cart/cart.selectors\";\r\nimport {\r\n    CheckoutPageContainer,\r\n    CheckoutHeaderContainer,\r\n    HeaderBlockContainer,\r\n    TotalContainer,\r\n    WarningContainer\r\n} from './checkout.styles';\r\n\r\nconst Checkout = ({ cartItems, total }) => (\r\n    <CheckoutPageContainer>\r\n        <CheckoutHeaderContainer>\r\n            <HeaderBlockContainer>\r\n                <span>Product</span>\r\n            </HeaderBlockContainer>\r\n            <HeaderBlockContainer>\r\n                <span>Description</span>\r\n            </HeaderBlockContainer>\r\n            <HeaderBlockContainer>\r\n                <span>Quantity</span>\r\n            </HeaderBlockContainer>\r\n            <HeaderBlockContainer>\r\n                <span>Price</span>\r\n            </HeaderBlockContainer>\r\n            <HeaderBlockContainer>\r\n                <span>Remove</span>\r\n            </HeaderBlockContainer>\r\n        </CheckoutHeaderContainer>\r\n        {cartItems.map(cartItem => (\r\n            <CheckoutItem key={cartItem.id} cartItem={cartItem} />\r\n        ))}\r\n        <TotalContainer>TOTAL: ${total}</TotalContainer>\r\n        <WarningContainer>\r\n            *Please use the following test credit card for payments*\r\n            <br />\r\n            4242 4242 4242 4242 - Exp: 01/20 - CVV: 123\r\n        </WarningContainer>\r\n        <StripeCheckoutButton price={total} />\r\n    </CheckoutPageContainer>\r\n);\r\n\r\nconst mapStateToProps = createStructuredSelector({\r\n    cartItems: selectCartItems,\r\n    total: selectCartTotal\r\n});\r\n\r\nexport default connect(mapStateToProps)(Checkout);"],"sourceRoot":""}