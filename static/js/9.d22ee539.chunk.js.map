{"version":3,"sources":["pages/signin-and-signout-page/signin-and-signout-page.styles.jsx","components/sign-in/sign-in.styles.jsx","components/form-input/form-input.styles.jsx","components/form-input/form-input.component.jsx","components/sign-in/sign-in.component.jsx","components/sign-up/sign-up.styles.jsx","components/sign-up/sign-up.component.jsx","pages/signin-and-signout-page/signin-and-signout-page.component.jsx"],"names":["SignInAndSignUpContainer","styled","div","SignInContainer","SignInTitle","h2","ButtonsBarContainer","subColor","shrinkLabelStyles","css","GroupContainer","FormInputContainer","input","FormInputLabel","label","FormInput","handleChange","props","onChange","className","value","length","connect","dispatch","googleSignInStart","emailSignInStart","email","password","useState","userCredentials","setCredentials","handleSubmit","event","a","preventDefault","target","name","onSubmit","type","required","onClick","isGoogleSignIn","SignUpContainer","SignUpTitle","signUp","displayName","confirmPassword","signUpStart","setUserCredentials","alert","SignInAndSignUpPage"],"mappings":"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","file":"static/js/9.d22ee539.chunk.js","sourcesContent":["import styled from 'styled-components';\r\n\r\nexport const SignInAndSignUpContainer = styled.div`\r\n  width: 850px;\r\n  display: flex;\r\n  justify-content: space-between;\r\n  margin: 30px auto;\r\n  @media screen and (max-width: 800px) {\r\n    flex-direction: column;\r\n    width: unset;\r\n    align-items: center;\r\n    > *:first-child {\r\n      margin-bottom: 50px;\r\n    }\r\n  }\r\n`;","import styled from 'styled-components';\r\n\r\nexport const SignInContainer = styled.div`\r\n  width: 380px;\r\n  display: flex;\r\n  flex-direction: column;\r\n  @media screen and (max-width:800px){\r\n    width: 100%;\r\n  }\r\n`;\r\n\r\nexport const SignInTitle = styled.h2`\r\n  margin: 10px 0;\r\n`;\r\n\r\nexport const ButtonsBarContainer = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n`;","import styled, { css } from 'styled-components';\r\n\r\nconst subColor = 'grey';\r\nconst mainColor = 'black';\r\n\r\nconst shrinkLabelStyles = css`\r\n  top: -14px;\r\n  font-size: 12px;\r\n  color: ${mainColor};\r\n`;\r\n\r\nexport const GroupContainer = styled.div`\r\n  position: relative;\r\n  margin: 45px 0;\r\n  input[type='password'] {\r\n    letter-spacing: 0.3em;\r\n  }\r\n`;\r\n\r\nexport const FormInputContainer = styled.input`\r\n  background: none;\r\n  background-color: white;\r\n  color: ${subColor};\r\n  font-size: 18px;\r\n  padding: 10px 10px 10px 5px;\r\n  display: block;\r\n  width: 100%;\r\n  border: none;\r\n  border-radius: 0;\r\n  border-bottom: 1px solid ${subColor};\r\n  margin: 25px 0;\r\n  &:focus {\r\n    outline: none;\r\n  }\r\n  &:focus ~ label {\r\n    ${shrinkLabelStyles}\r\n  }\r\n`;\r\n\r\nexport const FormInputLabel = styled.label`\r\n  color: ${subColor};\r\n  font-size: 16px;\r\n  font-weight: normal;\r\n  position: absolute;\r\n  pointer-events: none;\r\n  left: 5px;\r\n  top: 10px;\r\n  transition: 300ms ease all;\r\n  &.shrink {\r\n    ${shrinkLabelStyles}\r\n  }\r\n`;","\r\nimport React from 'react';\r\n\r\nimport {\r\n  GroupContainer,\r\n  FormInputContainer,\r\n  FormInputLabel\r\n} from './form-input.styles';\r\n\r\nconst FormInput = ({ handleChange, label, ...props }) => (\r\n  <GroupContainer>\r\n    <FormInputContainer onChange={handleChange} {...props} />\r\n    {label ? (\r\n      <FormInputLabel className={props.value.length ? 'shrink' : ''}>\r\n        {label}\r\n      </FormInputLabel>\r\n    ) : null}\r\n  </GroupContainer>\r\n);\r\n\r\nexport default FormInput;","import React, { useState } from \"react\";\r\nimport {\r\n    SignInContainer,\r\n    SignInTitle,\r\n    ButtonsBarContainer\r\n} from './sign-in.styles';\r\nimport FormInput from '../form-input/form-input.component';\r\nimport CustomButton from \"../custom-button/custom-button.component\";\r\nimport { emailSignInStart, googleSignInStart } from \"../../redux/user/user.action\";\r\nimport { connect } from \"react-redux\";\r\n\r\nconst SignIn = ({ emailSignInStart, googleSignInStart }) => {\r\n    const [userCredentials, setCredentials] = useState({ email: '', password: '' });\r\n    const { email, password } = userCredentials;\r\n\r\n    const handleSubmit = async event => {\r\n        event.preventDefault();\r\n        emailSignInStart(email, password);\r\n    };\r\n\r\n    const handleChange = event => {\r\n        const { value, name } = event.target;\r\n        setCredentials({ ...userCredentials, [name]: value });\r\n    }\r\n\r\n    return (\r\n        <SignInContainer>\r\n            <SignInTitle>I already have an account</SignInTitle>\r\n            <span>Sign in with your email and password</span>\r\n\r\n            <form onSubmit={handleSubmit}>\r\n                <FormInput\r\n                    name='email'\r\n                    type='email'\r\n                    handleChange={handleChange}\r\n                    value={email}\r\n                    label='email'\r\n                    required\r\n                />\r\n                <FormInput\r\n                    name='password'\r\n                    type='password'\r\n                    value={password}\r\n                    handleChange={handleChange}\r\n                    label='password'\r\n                    required\r\n                />\r\n                <ButtonsBarContainer>\r\n                    <CustomButton type='submit'> Sign in </CustomButton>\r\n                    <CustomButton\r\n                        type='button'\r\n                        onClick={googleSignInStart}\r\n                        isGoogleSignIn\r\n                    >\r\n                        Sign in with Google\r\n                    </CustomButton>\r\n                </ButtonsBarContainer>\r\n            </form>\r\n        </SignInContainer>\r\n    );\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    googleSignInStart: () => dispatch(googleSignInStart()),\r\n    emailSignInStart: (email, password) => dispatch(emailSignInStart({ email, password }))\r\n});\r\nexport default connect(null, mapDispatchToProps)(SignIn);","import styled from 'styled-components';\r\n\r\nexport const SignUpContainer = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  width: 380px;\r\n  @media screen and (max-width:800px){\r\n    width: 100%;\r\n  }\r\n`;\r\n\r\nexport const SignUpTitle = styled.h2`\r\n  margin: 10px 0;\r\n`;","import React, { useState } from 'react';\r\n\r\nimport FormInput from '../form-input/form-input.component';\r\nimport CustomButton from '../custom-button/custom-button.component';\r\n\r\nimport { SignUpContainer, SignUpTitle } from './sign-up.styles';\r\nimport { signUpStart } from '../../redux/user/user.action';\r\nimport { connect } from 'react-redux';\r\n\r\nconst SignUp = ({ signUp }) => {\r\n  const [userCredentials, setUserCredentials] = useState({\r\n    displayName: '',\r\n    email: '',\r\n    password: '',\r\n    confirmPassword: ''\r\n  });\r\n\r\n  const { displayName, email, password, confirmPassword } = userCredentials;\r\n  const handleSubmit = async event => {\r\n    event.preventDefault();\r\n\r\n    signUp(displayName, email, password, confirmPassword);\r\n\r\n    if (password !== confirmPassword) {\r\n      alert(\"passwords don't match\");\r\n      return;\r\n    }\r\n  };\r\n\r\n  const handleChange = event => {\r\n    const { name, value } = event.target;\r\n\r\n    setUserCredentials({ ...userCredentials, [name]: value });\r\n  };\r\n\r\n\r\n  return (\r\n    <SignUpContainer>\r\n      <SignUpTitle>I do not have a account</SignUpTitle>\r\n      <span>Sign up with your email and password</span>\r\n      <form className='sign-up-form' onSubmit={handleSubmit}>\r\n        <FormInput\r\n          type='text'\r\n          name='displayName'\r\n          value={displayName}\r\n          onChange={handleChange}\r\n          label='Display Name'\r\n          required\r\n        />\r\n        <FormInput\r\n          type='email'\r\n          name='email'\r\n          value={email}\r\n          onChange={handleChange}\r\n          label='Email'\r\n          required\r\n        />\r\n        <FormInput\r\n          type='password'\r\n          name='password'\r\n          value={password}\r\n          onChange={handleChange}\r\n          label='Password'\r\n          required\r\n        />\r\n        <FormInput\r\n          type='password'\r\n          name='confirmPassword'\r\n          value={confirmPassword}\r\n          onChange={handleChange}\r\n          label='Confirm Password'\r\n          required\r\n        />\r\n        <CustomButton type='submit'>SIGN UP</CustomButton>\r\n      </form>\r\n    </SignUpContainer>\r\n  );\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  signUp: (displayName, email, password, confirmPassword) =>\r\n    dispatch(signUpStart({ displayName, email, password, confirmPassword }))\r\n})\r\n\r\nexport default connect(null, mapDispatchToProps)(SignUp);","import React from \"react\";\r\nimport { SignInAndSignUpContainer } from './signin-and-signout-page.styles';\r\nimport SignIn from '../../components/sign-in/sign-in.component';\r\nimport SignUp from \"../../components/sign-up/sign-up.component\";\r\nconst SignInAndSignUpPage = () => (\r\n    <SignInAndSignUpContainer>\r\n        <SignIn />\r\n        <SignUp />\r\n    </SignInAndSignUpContainer>\r\n);\r\nexport default SignInAndSignUpPage;"],"sourceRoot":""}